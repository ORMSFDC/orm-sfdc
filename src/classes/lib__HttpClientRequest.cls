/*
This file is generated and isn't the actual source code for this
managed global class.
This read-only file shows the class's global constructors,
methods, variables, and properties.
To enable code to compile, all methods return null.
*/
global virtual class HttpClientRequest {
    global HttpClientRequest() {

    }
    global HttpClientRequest(lib.HttpClientRequest defaults, String method, String url, Object body) {

    }
    global virtual lib.HttpClientRequest addHeaders(Map<String,Object> headers) {
        return null;
    }
    global virtual lib.HttpClientRequest authz(String value) {
        return null;
    }
    global virtual lib.HttpClientRequest authzBasic(String username, String password) {
        return null;
    }
    global virtual lib.HttpClientRequest authzBearer(String value) {
        return null;
    }
    global virtual Object body() {
        return null;
    }
    global virtual lib.HttpClientRequest body(Object body) {
        return null;
    }
    global virtual String clientCert() {
        return null;
    }
    global virtual lib.HttpClientRequest clientCert(String clientCert) {
        return null;
    }
    global virtual Boolean compressed() {
        return null;
    }
    global virtual lib.HttpClientRequest compressed(Boolean compressed) {
        return null;
    }
    global virtual lib.HttpClientRequest contentType(String value) {
        return null;
    }
    global virtual lib.HttpClientRequest contentTypeFormEncoded() {
        return null;
    }
    global virtual lib.HttpClientRequest contentTypeJson() {
        return null;
    }
    global virtual lib.HttpClientExecutor executor() {
        return null;
    }
    global virtual lib.HttpClientRequest executor(lib.HttpClientExecutor executor) {
        return null;
    }
    global virtual lib.HttpClientRequest header(String name, Object value) {
        return null;
    }
    global virtual Map<String,Object> headers() {
        return null;
    }
    global virtual lib.HttpClientRequest headers(Map<String,Object> headers) {
        return null;
    }
    global virtual Boolean isHeaderSet(String name) {
        return null;
    }
    global virtual Boolean logBody() {
        return null;
    }
    global virtual lib.HttpClientRequest logBody(Boolean logBody) {
        return null;
    }
    global virtual String method() {
        return null;
    }
    global virtual lib.HttpClientRequest method(String method) {
        return null;
    }
    global virtual lib.HttpClientRequest pathParam(String name, Object value) {
        return null;
    }
    global virtual Map<String,Object> pathParams() {
        return null;
    }
    global virtual lib.HttpClientRequest pathParams(Map<String,Object> pathParams) {
        return null;
    }
    global virtual lib.HttpClientRequest queryParam(String name, Object value) {
        return null;
    }
    global virtual Map<String,Object> queryParams() {
        return null;
    }
    global virtual lib.HttpClientRequest queryParams(Map<String,Object> queryParams) {
        return null;
    }
    global virtual Integer readTimeout() {
        return null;
    }
    global virtual lib.HttpClientRequest readTimeout(Integer readTimeout) {
        return null;
    }
    global virtual Boolean retry() {
        return null;
    }
    global virtual lib.HttpClientRequest retry(Boolean retry) {
        return null;
    }
    global virtual Integer retryAttempts() {
        return null;
    }
    global virtual lib.HttpClientRequest retryAttempts(Integer retryAttempts) {
        return null;
    }
    global virtual lib.HttpClientResponse send() {
        return null;
    }
    global virtual Blob sendToBlob() {
        return null;
    }
    global virtual lib.JsonMapper sendToJsonMapper() {
        return null;
    }
    global virtual Object sendToObject(System.Type type) {
        return null;
    }
    global virtual String sendToString() {
        return null;
    }
    global virtual String url() {
        return null;
    }
    global virtual lib.HttpClientRequest url(String url) {
        return null;
    }
}
